#!/bin/sh

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Append `!` to handle `sh -e`
! read -d '' TEMPLATE << "EOF"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>Label</key>
		<string>${job_id}</string>
		<key>EnvironmentVariables</key>
		<dict>
			<key>LAUNCHD_ONESHOT_JOB</key>
			<string>1</string>
		</dict>
		<key>Program</key>
		<string>/usr/local/bin/launchd-oneshot</string>
		<key>ProgramArguments</key>
		<array>
			<string>/usr/local/bin/launchd-oneshot</string>
			<string>${job}</string>
		</array>
		<key>RunAtLoad</key>
		<true/>
		<key>KeepAlive</key>
		<dict>
	    <key>SuccessfulExit</key>
	    <false/>
	  </dict>
		<key>StandardOutPath</key>
		<string>/tmp/launchd-oneshot.log</string>
		<key>StandardErrorPath</key>
		<string>/tmp/launchd-oneshot.log</string>
	</dict>
</plist>

EOF


render_template()
{
  eval "echo \"$(echo "$1")\""
}

job=$1

if [ ! -x "$job" ];
then
  echo "error: $job is not executable"
  echo
  echo "Usage: launchd-oneshot <job>"
  exit 1
fi

job=$(/usr/local/bin/realpath "$job") # realpath is installed by `brew install coreutils`
job_id=com.cybertk.launchd-oneshot.$(basename "$job" | tr ' ' '-')
launchd_job="/Library/LaunchDaemons/$job_id.plist"

if [ -n "$LAUNCHD_ONESHOT_JOB" ];
then
  # mode: Run job
  eval "$job"
  rc=$?

  if [ "$rc" -eq 0 ]; then
    # `launchctl unload` will kill this process immediately
    # TODO: Find a way to unload job first
    # launchctl unload "$launchd_job"
    # echo "Never reached here"
    rm -f "$launchd_job"
    echo "Job done"
  fi
  exit "$rc"
fi

# mode: Install job
if [ "$(id -u)" != "0" ];
then
   echo "error: This script must be run as root" 1>&2
   exit 1
fi

render_template "$TEMPLATE" > "$launchd_job"
chmod 644 "$launchd_job"
echo "Installed $1 to $launchd_job"
